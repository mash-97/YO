-> Problem Name: NAB

-> Time Limit: 2s

-> Problem Statements:

	There will be t test cases. In each test case there will be 3 Integers n, a and b. 
You have to calculate how much numbers are there between a and b that completely divided by n.


-> Inputs Range:

	1 <= t <= 101
	1 <= a <= 1000000000001
	1 <= b <= 1000000000001
	

-> Examples:
	Sample Inputs: 							Sample Outputs:

	2										3
	3 3 9									9
	1 2 10


	Sample Inputs:							Sample Outputs:
	
	3 										99999991 
	10 100 1000000000						101010091
	11 111 1111111111						1001000901 
	7  707 7007007007
	


-> Attack Statements:

	There should be a windows .exe file in the current directory by the name nab_attack_w32.exe for 32 bit system and nab_attack_64.exe for 64 bit system. Run which on suits you. You will be prompted with a terminal program, here you'll be asked for who you want to attack. If you want to attack all, type '*' (a star sign, some says asterik) to select all, or you can attack specific friends by giving their IDs in this format: ID1, ID2, ... .
	
	After entering who you want to attack. Now you can give test case just like in the Example Input. Remember you can attack a specific one with at most 2 test cases, one from * and other by specifying ID.
	
	(For linux type users: there is a linux runnable nab_attack_linux to.)



-> Help Words:

	* Use long long int in nab as it requires 10^12+1 
	
	* There are like 3 ways to solve this problem:
	
		1. Complete Brute Force			( looping through a to b )
		2. Optimized Brute Force         ( looping through a to b, but increase rate is n)
		3. Calculated Logical Method     ( Using logics and calculations to find a generalized formula like form)
	
		So use the one that requires less time, as the time limit is only 2s.
	

		4. And ROCK ME ! :D

